const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function checkDepartmentsByCompany() {
  try {
    console.log('üîç ‰ºöÁ§æÂà•ÈÉ®ÁΩ≤„Éá„Éº„Çø„ÇíÁ¢∫Ë™ç‰∏≠...')
    
    // ‰ºöÁ§æ‰∏ÄË¶ß„ÇíÂèñÂæó
    const { data: companies, error: companiesError } = await supabase
      .from('companies')
      .select('id, name')
      .order('name')
    
    console.log('üè¢ ‰ºöÁ§æ‰∏ÄË¶ß:')
    companies?.forEach((company, index) => {
      console.log(`  ${index + 1}. ${company.name} (ID: ${company.id})`)
    })
    
    // ÈÉ®ÁΩ≤‰∏ÄË¶ß„ÇíÂèñÂæó
    const { data: departments, error: departmentsError } = await supabase
      .from('departments')
      .select('id, name, company_id')
      .order('name')
    
    console.log('\nüë• ÈÉ®ÁΩ≤‰∏ÄË¶ß:')
    departments?.forEach((department, index) => {
      const company = companies?.find(c => c.id === department.company_id)
      console.log(`  ${index + 1}. ${department.name} (‰ºöÁ§æ: ${company?.name || '‰∏çÊòé'})`)
    })
    
    // ÂêÑ‰ºöÁ§æ„ÅÆÈÉ®ÁΩ≤Êï∞„ÇíÁ¢∫Ë™ç
    console.log('\nüìä ‰ºöÁ§æÂà•ÈÉ®ÁΩ≤Êï∞:')
    for (const company of companies || []) {
      const companyDepartments = departments?.filter(d => d.company_id === company.id) || []
      console.log(`  ${company.name}: ${companyDepartments.length}‰ª∂`)
      companyDepartments.forEach(dept => {
        console.log(`    - ${dept.name}`)
      })
    }
    
    // ÁèæÂú®„ÅÆ„É¶„Éº„Ç∂„ÉºÔºàito.dev@ii-stylelab.comÔºâ„ÅÆ‰ºöÁ§æ„ÅÆÈÉ®ÁΩ≤„ÇíÁ¢∫Ë™ç
    const { data: currentUser, error: userError } = await supabase
      .from('users')
      .select('id, email, name, company_id')
      .eq('email', 'ito.dev@ii-stylelab.com')
      .single()
    
    if (currentUser && !userError) {
      console.log(`\nüë§ ÁèæÂú®„ÅÆ„É¶„Éº„Ç∂„Éº: ${currentUser.email} (${currentUser.name})`)
      console.log(`üè¢ ÊâÄÂ±û‰ºöÁ§æID: ${currentUser.company_id}`)
      
      const userCompany = companies?.find(c => c.id === currentUser.company_id)
      console.log(`üè¢ ÊâÄÂ±û‰ºöÁ§æÂêç: ${userCompany?.name || '‰∏çÊòé'}`)
      
      const userDepartments = departments?.filter(d => d.company_id === currentUser.company_id) || []
      console.log(`üë• Âà©Áî®ÂèØËÉΩ„Å™ÈÉ®ÁΩ≤: ${userDepartments.length}‰ª∂`)
      userDepartments.forEach(dept => {
        console.log(`    - ${dept.name}`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error)
  }
}

checkDepartmentsByCompany()
